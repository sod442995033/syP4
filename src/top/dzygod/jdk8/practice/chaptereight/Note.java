package top.dzygod.jdk8.practice.chaptereight;

/**
 * @Author: dingziyuan
 * @Date: 2018/9/29 12:35
 * @Description: 第八章总结
 */
public class Note {

    /**
     * 下面回顾一下这一章的主要内容。
     *  Lambda表达式能提升代码的可读性和灵活性。
     *  如果你的代码中使用了匿名类，尽量用Lambda表达式替换它们，但是要注意二者间语义
     * 的微妙差别，比如关键字 this ，以及变量隐藏。
     *  跟Lambda表达式比起来，方法引用的可读性更好 。
     *  尽量使用Stream API替换迭代式的集合处理。
     *  Lambda表达式有助于避免使用面向对象设计模式时容易出现的僵化的模板代码，典型的
     * 比如策略模式、模板方法、观察者模式、责任链模式，以及工厂模式。
     *  即使采用了Lambda表达式，也同样可以进行单元测试，但是通常你应该关注使用了
     * Lambda表达式的方法的行为。
     *  尽量将复杂的Lambda表达式抽象到普通方法中。
     *  Lambda表达式会让栈跟踪的分析变得更为复杂。
     *  流提供的 peek 方法在分析Stream流水线时，能将中间变量的值输出到日志中，是非常有
     * 用的工具
     */
}
